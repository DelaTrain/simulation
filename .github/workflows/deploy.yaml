# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow one concurrent deployment
concurrency:
    group: "pages"
    cancel-in-progress: true

env:
    BASE_URL: /simulation/

jobs:
    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v5
            - name: Download latest release from DelaTrain/scraper
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  REPO: DelaTrain/scraper
              run: |
                  mkdir -p ./data
                  api="https://api.github.com/repos/${REPO}/releases/latest"
                  echo "Querying $api"
                  tarball_url=$(curl -sS -H "Authorization: token $GITHUB_TOKEN" "$api" | python3 -c 'import sys,json;print(json.load(sys.stdin).get("tarball_url",""))')
                  if [ -z "$tarball_url" ]; then
                      echo "Failed to find tarball_url for latest release" >&2
                      exit 1
                  fi
                  echo "Downloading tarball from $tarball_url"
                  curl -sS -L -H "Authorization: token $GITHUB_TOKEN" -o /tmp/release.tar.gz "$tarball_url"
                  tar -xzf /tmp/release.tar.gz -C ./data --strip-components=1
            - uses: pnpm/action-setup@v4
              name: Install pnpm
              with:
                  version: 10
                  run_install: false
            - name: Set up Node
              uses: actions/setup-node@v5
              with:
                  node-version: lts/*
                  cache: "pnpm"
            - name: Install dependencies
              run: pnpm install --frozen-lockfile
            - name: Build
              run: pnpm run build
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v4
              with:
                  # Upload dist folder
                  path: "./dist"
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
